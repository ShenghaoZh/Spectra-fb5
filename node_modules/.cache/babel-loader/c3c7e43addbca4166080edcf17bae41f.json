{"ast":null,"code":"var _jsxFileName = \"/Users/shenghaozhang/Documents/Programs/0-Spectra/HW5-React/react-ui/src/components/Charts/stackedBar.js\";\nimport React, { Component } from 'react';\nimport MyTemplete from '../Template';\nimport { XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines, VerticalBarSeries } from 'react-vis';\nimport CodeBlock from '../';\nimport ReactMarkdown from 'react-markdown';\n\nclass MyStackedBar extends Component {\n  renderStackedBar() {\n    const data1 = [{\n      x: 'Apple',\n      y: 20\n    }, {\n      x: 'Banana',\n      y: 10\n    }, {\n      x: 'Orange',\n      y: 5\n    }, {\n      x: 'peach',\n      y: 8\n    }, {\n      x: 'Lime',\n      y: 15\n    }];\n    const data2 = [{\n      x: 'Apple',\n      y: 10\n    }, {\n      x: 'Banana',\n      y: 20\n    }, {\n      x: 'Orange',\n      y: 10\n    }, {\n      x: 'peach',\n      y: 20\n    }, {\n      x: 'Lime',\n      y: 5\n    }];\n    const data3 = [{\n      x: 'Apple',\n      y: 20\n    }, {\n      x: 'Banana',\n      y: 10\n    }, {\n      x: 'Orange',\n      y: 10\n    }, {\n      x: 'peach',\n      y: 12\n    }, {\n      x: 'Lime',\n      y: 5\n    }];\n    return React.createElement(\"div\", {\n      className: \"stack-display\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(XYPlot, {\n      margin: {\n        bottom: 70,\n        top: 30\n      },\n      xType: \"ordinal\",\n      width: 700,\n      height: 700,\n      stackBy: \"y\",\n      yDomain: [0, 50],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(VerticalGridLines, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(HorizontalGridLines, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(VerticalBarSeries, {\n      data: data1,\n      color: \"#404040\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(VerticalBarSeries, {\n      data: data2,\n      color: \"#808080\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(VerticalBarSeries, {\n      data: data3,\n      color: \"#ababab\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })));\n  }\n\n  render() {\n    let output = this.renderStackedBar();\n    let myName = \"Stacked Bar\";\n    let string = \"\\n    import {XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines,VerticalBarSeries} from 'react-vis';\\n\\n    const data1 = [\\n      {x: 'Apple', y: 20},\\n      {x: 'Banana', y: 10},\\n      {x: 'Orange', y: 5}\\n    ];\\n\\n    const data2 = [\\n      {x: 'Apple', y: 10},\\n      {x: 'Banana', y: 20},\\n      {x: 'Orange', y: 10}\\n    ];\\n\\n    const data3 = [\\n      {x: 'Apple', y: 20},\\n      {x: 'Banana', y: 10},\\n      {x: 'Orange', y: 10}\\n    ];\\n\\n    return (\\n      <XYPlot margin={{Bottom: 70}} xType=\\\"ordinal\\\" width={500} height={500} stackBy=\\\"y\\\">\\n        <VerticalGridLines />\\n        <HorizontalGridLines />\\n        <XAxis  />\\n        <YAxis />\\n        <VerticalBarSeries\\n          data={data1}\\n        />\\n        <VerticalBarSeries\\n          data={data2}\\n        />\\n        <VerticalBarSeries\\n          data={data3}\\n        />\\n      </XYPlot>\\n    );\";\n    let code = React.createElement(ReactMarkdown, {\n      source: string,\n      renderers: {\n        code: CodeBlock\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(MyTemplete, {\n      content: output,\n      name: myName,\n      sampleUsage: code,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default MyStackedBar;","map":{"version":3,"sources":["/Users/shenghaozhang/Documents/Programs/0-Spectra/HW5-React/react-ui/src/components/Charts/stackedBar.js"],"names":["React","Component","MyTemplete","XYPlot","XAxis","YAxis","HorizontalGridLines","VerticalGridLines","VerticalBarSeries","CodeBlock","ReactMarkdown","MyStackedBar","renderStackedBar","data1","x","y","data2","data3","bottom","top","render","output","myName","string","code"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAwB,aAAxB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,KAAvB,EAA8BC,mBAA9B,EAAmDC,iBAAnD,EAAqEC,iBAArE,QAA6F,WAA7F;AACA,OAAOC,SAAP,MAAsB,KAAtB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;AAEA,MAAMC,YAAN,SAA2BV,SAA3B,CACA;AAEEW,EAAAA,gBAAgB,GAChB;AACE,UAAMC,KAAK,GAAG,CACZ;AAACC,MAAAA,CAAC,EAAE,OAAJ;AAAaC,MAAAA,CAAC,EAAE;AAAhB,KADY,EAEZ;AAACD,MAAAA,CAAC,EAAE,QAAJ;AAAcC,MAAAA,CAAC,EAAE;AAAjB,KAFY,EAGZ;AAACD,MAAAA,CAAC,EAAE,QAAJ;AAAcC,MAAAA,CAAC,EAAE;AAAjB,KAHY,EAIZ;AAACD,MAAAA,CAAC,EAAE,OAAJ;AAAaC,MAAAA,CAAC,EAAE;AAAhB,KAJY,EAKZ;AAACD,MAAAA,CAAC,EAAE,MAAJ;AAAYC,MAAAA,CAAC,EAAE;AAAf,KALY,CAAd;AAQA,UAAMC,KAAK,GAAG,CACZ;AAACF,MAAAA,CAAC,EAAE,OAAJ;AAAaC,MAAAA,CAAC,EAAE;AAAhB,KADY,EAEZ;AAACD,MAAAA,CAAC,EAAE,QAAJ;AAAcC,MAAAA,CAAC,EAAE;AAAjB,KAFY,EAGZ;AAACD,MAAAA,CAAC,EAAE,QAAJ;AAAcC,MAAAA,CAAC,EAAE;AAAjB,KAHY,EAIZ;AAACD,MAAAA,CAAC,EAAE,OAAJ;AAAaC,MAAAA,CAAC,EAAE;AAAhB,KAJY,EAKZ;AAACD,MAAAA,CAAC,EAAE,MAAJ;AAAYC,MAAAA,CAAC,EAAE;AAAf,KALY,CAAd;AAQA,UAAME,KAAK,GAAG,CACZ;AAACH,MAAAA,CAAC,EAAE,OAAJ;AAAaC,MAAAA,CAAC,EAAE;AAAhB,KADY,EAEZ;AAACD,MAAAA,CAAC,EAAE,QAAJ;AAAcC,MAAAA,CAAC,EAAE;AAAjB,KAFY,EAGZ;AAACD,MAAAA,CAAC,EAAE,QAAJ;AAAcC,MAAAA,CAAC,EAAE;AAAjB,KAHY,EAIZ;AAACD,MAAAA,CAAC,EAAE,OAAJ;AAAaC,MAAAA,CAAC,EAAE;AAAhB,KAJY,EAKZ;AAACD,MAAAA,CAAC,EAAE,MAAJ;AAAYC,MAAAA,CAAC,EAAE;AAAf,KALY,CAAd;AAQA,WACE;AAAK,MAAA,SAAS,EAAG,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAE;AAACG,QAAAA,MAAM,EAAE,EAAT;AAAaC,QAAAA,GAAG,EAAE;AAAlB,OAAhB;AAAuC,MAAA,KAAK,EAAC,SAA7C;AAAuD,MAAA,KAAK,EAAE,GAA9D;AAAmE,MAAA,MAAM,EAAE,GAA3E;AAAgF,MAAA,OAAO,EAAC,GAAxF;AAA4F,MAAA,OAAO,EAAE,CAAC,CAAD,EAAI,EAAJ,CAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE,oBAAC,iBAAD;AACE,MAAA,IAAI,EAAEN,KADR;AAEE,MAAA,KAAK,EAAC,SAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EASE,oBAAC,iBAAD;AACE,MAAA,IAAI,EAAEG,KADR;AAEE,MAAA,KAAK,EAAC,SAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAaE,oBAAC,iBAAD;AACE,MAAA,IAAI,EAAEC,KADR;AAEE,MAAA,KAAK,EAAC,SAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,CADF,CADF;AAsBD;;AACDG,EAAAA,MAAM,GACN;AACE,QAAIC,MAAM,GAAG,KAAKT,gBAAL,EAAb;AACA,QAAIU,MAAM,GAAG,aAAb;AACA,QAAIC,MAAM,83BAAV;AAsCA,QAAIC,IAAI,GAAI,oBAAC,aAAD;AAAe,MAAA,MAAM,EAAED,MAAvB;AAA+B,MAAA,SAAS,EAAE;AAAEC,QAAAA,IAAI,EAAEf;AAAR,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAZ;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAIY,MAAvB;AAA+B,MAAA,IAAI,EAAIC,MAAvC;AAA+C,MAAA,WAAW,EAAIE,IAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADF;AAKD;;AAnGH;;AAsGA,eAAeb,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport MyTemplete  from '../Template';\nimport {XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines,VerticalBarSeries} from 'react-vis';\nimport CodeBlock from '../';\nimport ReactMarkdown from 'react-markdown';\n\nclass MyStackedBar extends Component\n{\n\n  renderStackedBar()\n  {\n    const data1 = [\n      {x: 'Apple', y: 20},\n      {x: 'Banana', y: 10},\n      {x: 'Orange', y: 5},\n      {x: 'peach', y: 8},\n      {x: 'Lime', y: 15}\n    ];\n\n    const data2 = [\n      {x: 'Apple', y: 10},\n      {x: 'Banana', y: 20},\n      {x: 'Orange', y: 10},\n      {x: 'peach', y: 20},\n      {x: 'Lime', y: 5}\n    ];\n\n    const data3 = [\n      {x: 'Apple', y: 20},\n      {x: 'Banana', y: 10},\n      {x: 'Orange', y: 10},\n      {x: 'peach', y: 12},\n      {x: 'Lime', y: 5}\n    ];\n\n    return (\n      <div className = \"stack-display\">\n        <XYPlot margin={{bottom: 70, top: 30}} xType=\"ordinal\" width={700} height={700} stackBy=\"y\" yDomain={[0, 50]}>\n          <VerticalGridLines />\n          <HorizontalGridLines />\n          <XAxis  />\n          <YAxis />\n          <VerticalBarSeries\n            data={data1}\n            color=\"#404040\"\n          />\n          <VerticalBarSeries\n            data={data2}\n            color=\"#808080\"\n          />\n          <VerticalBarSeries\n            data={data3}\n            color=\"#ababab\"\n          />\n        </XYPlot>\n      </div>\n    );\n  }\n  render()\n  {\n    let output = this.renderStackedBar();\n    let myName = \"Stacked Bar\";\n    let string = `\n    import {XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines,VerticalBarSeries} from 'react-vis';\n\n    const data1 = [\n      {x: 'Apple', y: 20},\n      {x: 'Banana', y: 10},\n      {x: 'Orange', y: 5}\n    ];\n\n    const data2 = [\n      {x: 'Apple', y: 10},\n      {x: 'Banana', y: 20},\n      {x: 'Orange', y: 10}\n    ];\n\n    const data3 = [\n      {x: 'Apple', y: 20},\n      {x: 'Banana', y: 10},\n      {x: 'Orange', y: 10}\n    ];\n\n    return (\n      <XYPlot margin={{Bottom: 70}} xType=\"ordinal\" width={500} height={500} stackBy=\"y\">\n        <VerticalGridLines />\n        <HorizontalGridLines />\n        <XAxis  />\n        <YAxis />\n        <VerticalBarSeries\n          data={data1}\n        />\n        <VerticalBarSeries\n          data={data2}\n        />\n        <VerticalBarSeries\n          data={data3}\n        />\n      </XYPlot>\n    );`;\n    let code = (<ReactMarkdown source={string} renderers={{ code: CodeBlock }}/>);\n    return(\n      <div>\n      <MyTemplete content = {output} name = {myName} sampleUsage = {code}/>\n      </div>\n    );\n  }\n}\n\nexport default MyStackedBar;\n"]},"metadata":{},"sourceType":"module"}