{"ast":null,"code":"var _jsxFileName = \"/Users/shenghaozhang/Documents/Programs/0-Spectra/HW5-React/react-ui/src/components/Units/messageBar.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport MyTemplete from '../Template';\nimport CodeBlock from '../';\nimport ReactMarkdown from 'react-markdown';\n\nconst styles = theme => ({\n  root: {\n    margin: \"auto\",\n    width: '100%',\n    justifyContent: \"Center\",\n    marginTop: \"50px\",\n    marginBottom: \"50px\",\n    padding: \"auto\",\n    display: \"flex\"\n  },\n  snackbar1: {\n    margin: theme.spacing.unit * 3,\n    padding: theme.spacing.unit * 2,\n    color: \"forestgreen\",\n    fontSize: 15\n  },\n  snackbar2: {\n    margin: theme.spacing.unit * 3,\n    padding: theme.spacing.unit * 2,\n    color: \"red\",\n    fontSize: 15\n  }\n});\n\nfunction MyMessageBar(props) {\n  const classes = props.classes;\n  let output = React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(SnackbarContent, {\n    className: classes.snackbar1,\n    message: \" Have you finished our assignment?\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(SnackbarContent, {\n    className: classes.snackbar2,\n    message: 'Still working on it. \\\n          And  you?',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(SnackbarContent, {\n    className: classes.snackbar1,\n    message: \"I have not either. Can professor accept late submission?\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(SnackbarContent, {\n    className: classes.snackbar2,\n    message: 'No. \\\n          But there is one week remaining, do not be upset.',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }));\n  let myName = \"Message Bar\";\n  let string = \"\\n\\n    import SnackbarContent from '@material-ui/core/SnackbarContent';\\n\\n    function LongTextSnackbar(props) {\\n\\n      return (\\n        <div>\\n          <SnackbarContent message=\\\"hello\\\"  />\\n            <SnackbarContent message={your content}/>\\n            <SnackbarContent message=\\\"hi\\\"/>\\n        </div>\\n      );\\n     }\";\n  let code = React.createElement(ReactMarkdown, {\n    source: string,\n    renderers: {\n      code: CodeBlock\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(MyTemplete, {\n    content: output,\n    name: myName,\n    sampleUsage: code,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }));\n}\n\nMyMessageBar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(MyMessageBar);","map":{"version":3,"sources":["/Users/shenghaozhang/Documents/Programs/0-Spectra/HW5-React/react-ui/src/components/Units/messageBar.js"],"names":["React","PropTypes","withStyles","SnackbarContent","MyTemplete","CodeBlock","ReactMarkdown","styles","theme","root","margin","width","justifyContent","marginTop","marginBottom","padding","display","snackbar1","spacing","unit","color","fontSize","snackbar2","MyMessageBar","props","classes","output","myName","string","code","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport MyTemplete  from '../Template';\nimport CodeBlock from '../';\nimport ReactMarkdown from 'react-markdown';\n\nconst styles = theme => ({\n  root:{\n    margin: \"auto\",\n    width: '100%',\n    justifyContent: \"Center\",\n    marginTop: \"50px\",\n    marginBottom: \"50px\",\n    padding: \"auto\",\n    display:\"flex\",\n  },\n  snackbar1: {\n    margin: theme.spacing.unit*3,\n    padding: theme.spacing.unit*2,\n    color: \"forestgreen\",\n    fontSize: 15,\n  },\n  snackbar2: {\n    margin: theme.spacing.unit*3,\n    padding: theme.spacing.unit*2,\n    color: \"red\",\n    fontSize: 15\n  }\n});\n\nfunction MyMessageBar(props) {\n  const { classes } = props;\n\n  let output = (\n    <div className = {classes.root}>\n      <SnackbarContent className={classes.snackbar1} message=\" Have you finished our assignment?\" />\n      <SnackbarContent\n        className={classes.snackbar2}\n        message={\n          'Still working on it. \\\n          And  you?'\n        }\n      />\n      <SnackbarContent\n        className={classes.snackbar1}\n        message=\"I have not either. Can professor accept late submission?\"\n      />\n      <SnackbarContent\n        className={classes.snackbar2}\n        message={\n          'No. \\\n          But there is one week remaining, do not be upset.'\n        }\n      />\n  </div>\n  );\n\n  let myName = \"Message Bar\";\n\n  let string = `\n\n    import SnackbarContent from '@material-ui/core/SnackbarContent';\n\n    function LongTextSnackbar(props) {\n\n      return (\n        <div>\n          <SnackbarContent message=\"hello\"  />\n            <SnackbarContent message={your content}/>\n            <SnackbarContent message=\"hi\"/>\n        </div>\n      );\n     }`;\n\n  let code = (<ReactMarkdown source={string} renderers={{ code: CodeBlock }}/>);\n\n  return (\n    <div>\n    <MyTemplete content = {output} name = {myName} sampleUsage = {code}/>\n    </div>\n    );\n\n}\n\nMyMessageBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MyMessageBar);\n"]},"metadata":{},"sourceType":"module"}