{"ast":null,"code":"var _jsxFileName = \"/Users/shenghaozhang/Documents/Programs/0-Spectra/HW5-React/react-ui/src/components/Units/markdown.js\";\nimport MyTemplete from '../Template';\nimport CodeBlock from '../';\nimport ReactMarkdown from 'react-markdown';\nimport React from 'react';\n\nclass MyMarkdown extends React.Component {\n  buildString() {\n    let text = \"\\n        import Badge from '@material-ui/core/Badge';\\n        import MailIcon from '@material-ui/icons/Mail';\\n\\n        <React.Fragment>\\n          <Badge className={classes.margin} badgeContent={99} color=\\\"primary\\\">\\n            <MailIcon />\\n            </Badge>\\n          <Badge className={classes.margin} badgeContent={100} color=\\\"primary\\\">\\n            <MailIcon />\\n          </Badge>\\n        </React.Fragment>\\n       \";\n    return text;\n  }\n\n  renderMarkdown() {\n    let string = this.buildString();\n    let rendered = React.createElement(ReactMarkdown, {\n      source: string,\n      renderers: {\n        code: CodeBlock\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    });\n    return rendered;\n  }\n\n  render() {\n    let myName = \"Markdown\";\n    let output = this.renderMarkdown();\n    let sign = \"`\";\n    let string = \"\\n      import ReactMarkdown from 'react-markdown';\\n      import React from 'react';\\n      import CodeBlock from 'your path';\\n\\n      let string = \".concat(sign).concat(this.buildString()).concat(sign, \"\\n\\n      let code = (<ReactMarkdown source={string} renderers={{ code: CodeBlock }}/>);\\n\\n      return(\\n        {code}\\n      ); \");\n    let code = React.createElement(ReactMarkdown, {\n      source: string,\n      renderers: {\n        code: CodeBlock\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(MyTemplete, {\n      content: output,\n      name: myName,\n      sampleUsage: code,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default MyMarkdown;","map":{"version":3,"sources":["/Users/shenghaozhang/Documents/Programs/0-Spectra/HW5-React/react-ui/src/components/Units/markdown.js"],"names":["MyTemplete","CodeBlock","ReactMarkdown","React","MyMarkdown","Component","buildString","text","renderMarkdown","string","rendered","code","render","myName","output","sign"],"mappings":";AAAA,OAAOA,UAAP,MAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,KAAtB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAN,SAAyBD,KAAK,CAACE,SAA/B,CACA;AACEC,EAAAA,WAAW,GAAG;AAEZ,QAAIC,IAAI,ubAAR;AAaA,WAAOA,IAAP;AACD;;AAEDC,EAAAA,cAAc,GACd;AACE,QAAIC,MAAM,GAAG,KAAKH,WAAL,EAAb;AAEA,QAAII,QAAQ,GAAI,oBAAC,aAAD;AAAe,MAAA,MAAM,EAAED,MAAvB;AAA+B,MAAA,SAAS,EAAE;AAAEE,QAAAA,IAAI,EAAEV;AAAR,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhB;AAEA,WAAOS,QAAP;AACD;;AAEDE,EAAAA,MAAM,GACN;AAEI,QAAIC,MAAM,GAAG,UAAb;AACA,QAAIC,MAAM,GAAG,KAAKN,cAAL,EAAb;AACA,QAAIO,IAAI,GAAG,GAAX;AACA,QAAIN,MAAM,mKAKKM,IALL,SAKY,KAAKT,WAAL,EALZ,SAKiCS,IALjC,yIAAV;AAaA,QAAIJ,IAAI,GAAI,oBAAC,aAAD;AAAe,MAAA,MAAM,EAAEF,MAAvB;AAA+B,MAAA,SAAS,EAAE;AAAEE,QAAAA,IAAI,EAAEV;AAAR,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAZ;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAIa,MAAvB;AAA+B,MAAA,IAAI,EAAID,MAAvC;AAA+C,MAAA,WAAW,EAAIF,IAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADF;AAKH;;AArDH;;AAwDA,eAAeP,UAAf","sourcesContent":["import MyTemplete  from '../Template';\nimport CodeBlock from '../';\nimport ReactMarkdown from 'react-markdown';\nimport React from 'react';\n\nclass MyMarkdown extends React.Component\n{\n  buildString (){\n\n    let text =   `\n        import Badge from '@material-ui/core/Badge';\n        import MailIcon from '@material-ui/icons/Mail';\n\n        <React.Fragment>\n          <Badge className={classes.margin} badgeContent={99} color=\"primary\">\n            <MailIcon />\n            </Badge>\n          <Badge className={classes.margin} badgeContent={100} color=\"primary\">\n            <MailIcon />\n          </Badge>\n        </React.Fragment>\n       `;\n    return text;\n  }\n\n  renderMarkdown()\n  {\n    let string = this.buildString();\n\n    let rendered = (<ReactMarkdown source={string} renderers={{ code: CodeBlock }}/>);\n\n    return rendered;\n  }\n\n  render()\n  {\n\n      let myName = \"Markdown\";\n      let output = this.renderMarkdown();\n      let sign = \"`\";\n      let string = `\n      import ReactMarkdown from 'react-markdown';\n      import React from 'react';\n      import CodeBlock from 'your path';\n\n      let string = ${sign}${this.buildString()}${sign}\n\n      let code = (<ReactMarkdown source={string} renderers={{ code: CodeBlock }}/>);\n\n      return(\n        {code}\n      ); `;\n\n      let code = (<ReactMarkdown source={string} renderers={{ code: CodeBlock }}/>);\n      return(\n        <div>\n        <MyTemplete content = {output} name = {myName} sampleUsage = {code}/>\n        </div>\n      );\n  }\n}\n\nexport default MyMarkdown\n"]},"metadata":{},"sourceType":"module"}