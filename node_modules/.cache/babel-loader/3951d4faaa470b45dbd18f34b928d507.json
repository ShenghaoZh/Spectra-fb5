{"ast":null,"code":"var _jsxFileName = \"/Users/shenghaozhang/Documents/Programs/0-Spectra/HW5-React/react-ui/src/components/Charts/horizontalBar.js\";\nimport React, { Component } from 'react';\nimport MyTemplete from '../Template';\nimport { XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines, HorizontalBarSeries } from 'react-vis';\nimport CodeBlock from '../';\nimport ReactMarkdown from 'react-markdown';\n\nclass MyHorizontalBar extends Component {\n  renderBar() {\n    const data1 = [{\n      x: 25,\n      y: 'Apple'\n    }, {\n      x: 10,\n      y: 'Banana'\n    }, {\n      x: 17,\n      y: 'Orange'\n    }, {\n      x: 23,\n      y: 'Peach'\n    }, {\n      x: 15,\n      y: 'Lime'\n    }];\n    const data2 = [{\n      x: 10,\n      y: 'Apple'\n    }, {\n      x: 20,\n      y: 'Banana'\n    }, {\n      x: 5,\n      y: 'Orange'\n    }, {\n      x: 10,\n      y: 'Peach'\n    }, {\n      x: 20,\n      y: 'Lime'\n    }];\n    return React.createElement(\"div\", {\n      className: \"bar-display\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(XYPlot, {\n      margin: {\n        left: 70,\n        top: 20\n      },\n      yType: \"ordinal\",\n      width: 700,\n      height: 700,\n      xDomain: [0, 26],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(VerticalGridLines, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(HorizontalGridLines, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(HorizontalBarSeries, {\n      data: data1,\n      color: \"#ababab\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(HorizontalBarSeries, {\n      data: data2,\n      color: \"#404040\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })));\n  }\n\n  render() {\n    let output = this.renderBar();\n    let myName = \"Bar\";\n    let string = \"\\n    import {XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines,HorizontalBarSeries} from 'react-vis';\\n\\n    const data1 = [\\n      {x: 20, y: 'Apple'},\\n      {x: 10, y: 'Banana'},\\n      {x: 15, y: 'Orange'}\\n    ];\\n\\n    const data2 = [\\n      {x: 10, y: 'Apple'},\\n      {x: 20, y: 'Banana'},\\n      {x: 5, y: 'Orange'}\\n    ];\\n\\n    return (\\n      <XYPlot margin={{left: 70}} yType=\\\"ordinal\\\" width={500} height={500} xDomain={[0, 23]}>\\n        <VerticalGridLines />\\n        <HorizontalGridLines />\\n        <XAxis  />\\n        <YAxis />\\n        <HorizontalBarSeries\\n          data={data1}\\n        />\\n        <HorizontalBarSeries\\n          data={data2}\\n        />\\n      </XYPlot>\\n    )\\n    \";\n    let code = React.createElement(ReactMarkdown, {\n      source: string,\n      renderers: {\n        code: CodeBlock\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(MyTemplete, {\n      content: output,\n      name: myName,\n      sampleUsage: code,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default MyHorizontalBar;","map":{"version":3,"sources":["/Users/shenghaozhang/Documents/Programs/0-Spectra/HW5-React/react-ui/src/components/Charts/horizontalBar.js"],"names":["React","Component","MyTemplete","XYPlot","XAxis","YAxis","HorizontalGridLines","VerticalGridLines","HorizontalBarSeries","CodeBlock","ReactMarkdown","MyHorizontalBar","renderBar","data1","x","y","data2","left","top","render","output","myName","string","code"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAwB,aAAxB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,KAAvB,EAA8BC,mBAA9B,EAAmDC,iBAAnD,EAAqEC,mBAArE,QAA+F,WAA/F;AACA,OAAOC,SAAP,MAAsB,KAAtB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;AACA,MAAMC,eAAN,SAA8BV,SAA9B,CACA;AAEEW,EAAAA,SAAS,GACT;AACE,UAAMC,KAAK,GAAG,CACZ;AAACC,MAAAA,CAAC,EAAE,EAAJ;AAAQC,MAAAA,CAAC,EAAE;AAAX,KADY,EAEZ;AAACD,MAAAA,CAAC,EAAE,EAAJ;AAAQC,MAAAA,CAAC,EAAE;AAAX,KAFY,EAGZ;AAACD,MAAAA,CAAC,EAAE,EAAJ;AAAQC,MAAAA,CAAC,EAAE;AAAX,KAHY,EAIZ;AAACD,MAAAA,CAAC,EAAE,EAAJ;AAAQC,MAAAA,CAAC,EAAE;AAAX,KAJY,EAKZ;AAACD,MAAAA,CAAC,EAAE,EAAJ;AAAQC,MAAAA,CAAC,EAAE;AAAX,KALY,CAAd;AAQA,UAAMC,KAAK,GAAG,CACZ;AAACF,MAAAA,CAAC,EAAE,EAAJ;AAAQC,MAAAA,CAAC,EAAE;AAAX,KADY,EAEZ;AAACD,MAAAA,CAAC,EAAE,EAAJ;AAAQC,MAAAA,CAAC,EAAE;AAAX,KAFY,EAGZ;AAACD,MAAAA,CAAC,EAAE,CAAJ;AAAOC,MAAAA,CAAC,EAAE;AAAV,KAHY,EAIZ;AAACD,MAAAA,CAAC,EAAE,EAAJ;AAAQC,MAAAA,CAAC,EAAE;AAAX,KAJY,EAKZ;AAACD,MAAAA,CAAC,EAAE,EAAJ;AAAQC,MAAAA,CAAC,EAAE;AAAX,KALY,CAAd;AAQA,WACE;AAAK,MAAA,SAAS,EAAG,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAE;AAACE,QAAAA,IAAI,EAAE,EAAP;AAAWC,QAAAA,GAAG,EAAE;AAAhB,OAAhB;AAAqC,MAAA,KAAK,EAAC,SAA3C;AAAqD,MAAA,KAAK,EAAE,GAA5D;AAAiE,MAAA,MAAM,EAAE,GAAzE;AAA8E,MAAA,OAAO,EAAE,CAAC,CAAD,EAAI,EAAJ,CAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE,oBAAC,mBAAD;AACE,MAAA,IAAI,EAAEL,KADR;AAEE,MAAA,KAAK,EAAC,SAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EASE,oBAAC,mBAAD;AACE,MAAA,IAAI,EAAEG,KADR;AAEE,MAAA,KAAK,EAAC,SAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF,CADF;AAkBD;;AACDG,EAAAA,MAAM,GACN;AACE,QAAIC,MAAM,GAAG,KAAKR,SAAL,EAAb;AACA,QAAIS,MAAM,GAAG,KAAb;AACA,QAAIC,MAAM,utBAAV;AA8BA,QAAIC,IAAI,GAAI,oBAAC,aAAD;AAAe,MAAA,MAAM,EAAED,MAAvB;AAA+B,MAAA,SAAS,EAAE;AAAEC,QAAAA,IAAI,EAAEd;AAAR,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAZ;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAIW,MAAvB;AAA+B,MAAA,IAAI,EAAIC,MAAvC;AAA+C,MAAA,WAAW,EAAIE,IAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADF;AAKD;;AA/EH;;AAkFA,eAAeZ,eAAf","sourcesContent":["import React, { Component } from 'react';\nimport MyTemplete  from '../Template';\nimport {XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines,HorizontalBarSeries} from 'react-vis';\nimport CodeBlock from '../';\nimport ReactMarkdown from 'react-markdown';\nclass MyHorizontalBar extends Component\n{\n\n  renderBar()\n  {\n    const data1 = [\n      {x: 25, y: 'Apple'},\n      {x: 10, y: 'Banana'},\n      {x: 17, y: 'Orange'},\n      {x: 23, y: 'Peach'},\n      {x: 15, y: 'Lime'}\n    ];\n\n    const data2 = [\n      {x: 10, y: 'Apple'},\n      {x: 20, y: 'Banana'},\n      {x: 5, y: 'Orange'},\n      {x: 10, y: 'Peach'},\n      {x: 20, y: 'Lime'}\n    ];\n\n    return (\n      <div className = \"bar-display\">\n        <XYPlot margin={{left: 70, top: 20}} yType=\"ordinal\" width={700} height={700} xDomain={[0, 26]}>\n          <VerticalGridLines />\n          <HorizontalGridLines />\n          <XAxis  />\n          <YAxis />\n          <HorizontalBarSeries\n            data={data1}\n            color=\"#ababab\"\n          />\n          <HorizontalBarSeries\n            data={data2}\n            color=\"#404040\"\n          />\n        </XYPlot>\n      </div>\n    );\n  }\n  render()\n  {\n    let output = this.renderBar();\n    let myName = \"Bar\";\n    let string = `\n    import {XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines,HorizontalBarSeries} from 'react-vis';\n\n    const data1 = [\n      {x: 20, y: 'Apple'},\n      {x: 10, y: 'Banana'},\n      {x: 15, y: 'Orange'}\n    ];\n\n    const data2 = [\n      {x: 10, y: 'Apple'},\n      {x: 20, y: 'Banana'},\n      {x: 5, y: 'Orange'}\n    ];\n\n    return (\n      <XYPlot margin={{left: 70}} yType=\"ordinal\" width={500} height={500} xDomain={[0, 23]}>\n        <VerticalGridLines />\n        <HorizontalGridLines />\n        <XAxis  />\n        <YAxis />\n        <HorizontalBarSeries\n          data={data1}\n        />\n        <HorizontalBarSeries\n          data={data2}\n        />\n      </XYPlot>\n    )\n    `;\n    let code = (<ReactMarkdown source={string} renderers={{ code: CodeBlock }}/>);\n    return(\n      <div>\n      <MyTemplete content = {output} name = {myName} sampleUsage = {code}/>\n      </div>\n    );\n  }\n}\n\nexport default MyHorizontalBar;\n"]},"metadata":{},"sourceType":"module"}