{"ast":null,"code":"var _jsxFileName = \"/Users/shenghaozhang/Documents/Programs/0-Spectra/HW5-React/react-ui/src/components/Charts/verticalBar.js\";\nimport React, { Component } from 'react';\nimport MyTemplete from '../Template';\nimport { XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines, VerticalBarSeries } from 'react-vis';\nimport CodeBlock from '../';\nimport ReactMarkdown from 'react-markdown';\n\nclass MyVerticalBar extends Component {\n  renderBar() {\n    const data1 = [{\n      x: 'Apple',\n      y: 27\n    }, {\n      x: 'Banana',\n      y: 12\n    }, {\n      x: 'Orange',\n      y: 19\n    }, {\n      x: 'Peach',\n      y: 9\n    }, {\n      x: 'Lime',\n      y: 22\n    }];\n    const data2 = [{\n      x: 'Apple',\n      y: 20\n    }, {\n      x: 'Banana',\n      y: 23\n    }, {\n      x: 'Orange',\n      y: 6\n    }, {\n      x: 'Peach',\n      y: 15\n    }, {\n      x: 'Lime',\n      y: 19\n    }];\n    return React.createElement(\"div\", {\n      className: \"bar-display\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(XYPlot, {\n      margin: {\n        left: 70,\n        top: 20,\n        bottom: 50\n      },\n      xType: \"ordinal\",\n      width: 700,\n      height: 700,\n      yDomain: [0, 30],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(VerticalGridLines, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(HorizontalGridLines, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(VerticalBarSeries, {\n      data: data1,\n      color: \"#404040\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(VerticalBarSeries, {\n      data: data2,\n      color: \"#808080\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })));\n  }\n\n  render() {\n    let output = this.renderBar();\n    let myName = \"Bar\";\n    let string = \"\\n    import {XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines,VerticalBarSeries} from 'react-vis';\\n\\n    const data1 = [\\n      {x: 'Apple', y: 10},\\n      {x: 'Banana', y: 12},\\n      {x: 'Orange', y: 4},\\n    ];\\n\\n    const data2 = [\\n      {x: 'Apple', y: 18},\\n      {x: 'Banana', y: 15},\\n      {x: 'Orange', y: 7},\\n    ];\\n\\n    return (\\n      <XYPlot margin={{left: 70}} xType=\\\"ordinal\\\" width={500} height={500} yDomain={[0, 30]}>\\n        <VerticalGridLines />\\n        <HorizontalGridLines />\\n        <XAxis  />\\n        <YAxis />\\n        <VerticalBarSeries\\n          data={data1}\\n        />\\n        <VerticalBarSeries\\n          data={data2}\\n        />\\n      </XYPlot>\\n    )\\n    \";\n    let code = React.createElement(ReactMarkdown, {\n      source: string,\n      renderers: {\n        code: CodeBlock\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(MyTemplete, {\n      content: output,\n      name: myName,\n      sampleUsage: code,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default MyVerticalBar;","map":{"version":3,"sources":["/Users/shenghaozhang/Documents/Programs/0-Spectra/HW5-React/react-ui/src/components/Charts/verticalBar.js"],"names":["React","Component","MyTemplete","XYPlot","XAxis","YAxis","HorizontalGridLines","VerticalGridLines","VerticalBarSeries","CodeBlock","ReactMarkdown","MyVerticalBar","renderBar","data1","x","y","data2","left","top","bottom","render","output","myName","string","code"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport MyTemplete  from '../Template';\nimport {XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines,VerticalBarSeries} from 'react-vis';\nimport CodeBlock from '../';\nimport ReactMarkdown from 'react-markdown';\nclass MyVerticalBar extends Component\n{\n\n  renderBar()\n  {\n    const data1 = [\n      {x: 'Apple', y: 27},\n      {x: 'Banana', y: 12},\n      {x: 'Orange', y: 19},\n      {x: 'Peach', y: 9},\n      {x: 'Lime', y: 22}\n    ];\n\n    const data2 = [\n      {x: 'Apple', y: 20},\n      {x: 'Banana', y: 23},\n      {x: 'Orange', y: 6},\n      {x: 'Peach', y: 15},\n      {x: 'Lime', y: 19}\n    ];\n\n    return (\n      <div className = \"bar-display\">\n        <XYPlot margin={{left: 70, top: 20, bottom: 50}} xType=\"ordinal\" width={700} height={700} yDomain={[0, 30]}>\n          <VerticalGridLines />\n          <HorizontalGridLines />\n          <XAxis  />\n          <YAxis />\n          <VerticalBarSeries\n            data={data1}\n            color=\"#404040\"\n          />\n          <VerticalBarSeries\n            data={data2}\n            color=\"#808080\"\n          />\n        </XYPlot>\n      </div>\n    );\n  }\n  render()\n  {\n    let output = this.renderBar();\n    let myName = \"Bar\";\n    let string = `\n    import {XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines,VerticalBarSeries} from 'react-vis';\n\n    const data1 = [\n      {x: 'Apple', y: 10},\n      {x: 'Banana', y: 12},\n      {x: 'Orange', y: 4},\n    ];\n\n    const data2 = [\n      {x: 'Apple', y: 18},\n      {x: 'Banana', y: 15},\n      {x: 'Orange', y: 7},\n    ];\n\n    return (\n      <XYPlot margin={{left: 70}} xType=\"ordinal\" width={500} height={500} yDomain={[0, 30]}>\n        <VerticalGridLines />\n        <HorizontalGridLines />\n        <XAxis  />\n        <YAxis />\n        <VerticalBarSeries\n          data={data1}\n        />\n        <VerticalBarSeries\n          data={data2}\n        />\n      </XYPlot>\n    )\n    `;\n    let code = (<ReactMarkdown source={string} renderers={{ code: CodeBlock }}/>);\n    return(\n      <div>\n      <MyTemplete content = {output} name = {myName} sampleUsage = {code}/>\n      </div>\n    );\n  }\n}\n\nexport default MyVerticalBar;\n"]},"metadata":{},"sourceType":"module"}