{"ast":null,"code":"import _slicedToArray from \"/Users/shenghaozhang/Documents/Programs/0-Spectra/HW5-React/react-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/shenghaozhang/Documents/Programs/0-Spectra/HW5-React/react-ui/src/components/Units/progress.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport MyTemplete from '../Template';\nimport CodeBlock from '../';\nimport ReactMarkdown from 'react-markdown';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  progress: {\n    padding: theme.spacing.unit * 5\n  }\n});\n\nconst classes = useStyles();\n\nconst _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      completed = _React$useState2[0],\n      setCompleted = _React$useState2[1];\n\nReact.useEffect(() => {\n  function progress() {\n    setCompleted(oldCompleted => {\n      if (oldCompleted === 100) {\n        return 0;\n      }\n\n      const diff = Math.random() * 10;\n      return Math.min(oldCompleted + diff, 100);\n    });\n  }\n\n  const timer = setInterval(progress, 500);\n  return () => {\n    clearInterval(timer);\n  };\n}, []);\n\nfunction MyProgress(props) {\n  const classes = props.classes;\n  let output = React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(LinearProgress, {\n    variant: \"determinate\",\n    value: completed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(LinearProgress, {\n    color: \"secondary\",\n    variant: \"determinate\",\n    value: completed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }));\n  let myName = \"Progress\";\n  let string = \"\\n    import LinearProgress from '@material-ui/core/LinearProgress';\\n    function LinearIndeterminate(props) {\\n    return (\\n      <div>\\n        <LinearProgress />\\n        <br />\\n        <LinearProgress color=\\\"secondary\\\" />\\n      </div>\\n     );\\n    }\\n  \";\n  let code = React.createElement(ReactMarkdown, {\n    source: string,\n    renderers: {\n      code: CodeBlock\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(MyTemplete, {\n    content: output,\n    name: myName,\n    sampleUsage: code,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }));\n}\n\nMyProgress.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(MyProgress);","map":{"version":3,"sources":["/Users/shenghaozhang/Documents/Programs/0-Spectra/HW5-React/react-ui/src/components/Units/progress.js"],"names":["React","PropTypes","withStyles","LinearProgress","MyTemplete","CodeBlock","ReactMarkdown","styles","theme","root","flexGrow","progress","padding","spacing","unit","classes","useStyles","useState","completed","setCompleted","useEffect","oldCompleted","diff","Math","random","min","timer","setInterval","clearInterval","MyProgress","props","output","myName","string","code","propTypes","object","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,UAAP,MAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,KAAtB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAI;AACtBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN,GADgB;AAItBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,EAAEJ,KAAK,CAACK,OAAN,CAAcC,IAAd,GAAqB;AADtB;AAJY,CAAJ,CAApB;;AASE,MAAMC,OAAO,GAAGC,SAAS,EAAzB;;wBACkChB,KAAK,CAACiB,QAAN,CAAe,CAAf,C;;MAA3BC,S;MAAWC,Y;;AAElBnB,KAAK,CAACoB,SAAN,CAAgB,MAAM;AACpB,WAAST,QAAT,GAAoB;AAClBQ,IAAAA,YAAY,CAACE,YAAY,IAAI;AAC3B,UAAIA,YAAY,KAAK,GAArB,EAA0B;AACxB,eAAO,CAAP;AACD;;AACD,YAAMC,IAAI,GAAGC,IAAI,CAACC,MAAL,KAAgB,EAA7B;AACA,aAAOD,IAAI,CAACE,GAAL,CAASJ,YAAY,GAAGC,IAAxB,EAA8B,GAA9B,CAAP;AACD,KANW,CAAZ;AAOD;;AAED,QAAMI,KAAK,GAAGC,WAAW,CAAChB,QAAD,EAAW,GAAX,CAAzB;AACA,SAAO,MAAM;AACXiB,IAAAA,aAAa,CAACF,KAAD,CAAb;AACD,GAFD;AAGD,CAfD,EAeG,EAfH;;AAiBF,SAASG,UAAT,CAAoBC,KAApB,EAA2B;AAAA,QAEjBf,OAFiB,GAELe,KAFK,CAEjBf,OAFiB;AAGzB,MAAIgB,MAAM,GAAI;AAAK,IAAA,SAAS,EAAEhB,OAAO,CAACN,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACV,oBAAC,cAAD;AAAgB,IAAA,OAAO,EAAC,aAAxB;AAAsC,IAAA,KAAK,EAAES,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADU,EAEV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFU,EAGV,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAC,WAAtB;AAAkC,IAAA,OAAO,EAAC,aAA1C;AAAwD,IAAA,KAAK,EAAEA,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHU,CAAd;AAMA,MAAIc,MAAM,GAAG,UAAb;AACA,MAAIC,MAAM,6QAAV;AAaA,MAAIC,IAAI,GAAI,oBAAC,aAAD;AAAe,IAAA,MAAM,EAAED,MAAvB;AAA+B,IAAA,SAAS,EAAE;AAAEC,MAAAA,IAAI,EAAE7B;AAAR,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAZ;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAI0B,MAAvB;AAA+B,IAAA,IAAI,EAAIC,MAAvC;AAA+C,IAAA,WAAW,EAAEE,IAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADF;AAKD;;AAEDL,UAAU,CAACM,SAAX,GAAuB;AACrBpB,EAAAA,OAAO,EAAEd,SAAS,CAACmC,MAAV,CAAiBC;AADL,CAAvB;AAIA,eAAenC,UAAU,CAACK,MAAD,CAAV,CAAmBsB,UAAnB,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport MyTemplete  from '../Template';\nimport CodeBlock from '../';\nimport ReactMarkdown from 'react-markdown';\n\nconst styles = theme =>({\n  root: {\n    flexGrow: 1,\n  },\n  progress: {\n    padding: theme.spacing.unit * 5,\n  },\n});\n\n  const classes = useStyles();\n  const [completed, setCompleted] = React.useState(0);\n\n  React.useEffect(() => {\n    function progress() {\n      setCompleted(oldCompleted => {\n        if (oldCompleted === 100) {\n          return 0;\n        }\n        const diff = Math.random() * 10;\n        return Math.min(oldCompleted + diff, 100);\n      });\n    }\n\n    const timer = setInterval(progress, 500);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\nfunction MyProgress(props) {\n\n  const { classes } = props;\n  let output = (<div className={classes.root}>\n      <LinearProgress variant=\"determinate\" value={completed} />\n      <br />\n      <LinearProgress color=\"secondary\" variant=\"determinate\" value={completed} />\n  </div>\n  );\n  let myName = \"Progress\";\n  let string = `\n    import LinearProgress from '@material-ui/core/LinearProgress';\n    function LinearIndeterminate(props) {\n    return (\n      <div>\n        <LinearProgress />\n        <br />\n        <LinearProgress color=\"secondary\" />\n      </div>\n     );\n    }\n  `;\n\n  let code = (<ReactMarkdown source={string} renderers={{ code: CodeBlock }}/>);\n\n  return (\n    <div>\n    <MyTemplete content = {output} name = {myName} sampleUsage={code}/>\n    </div>\n  );\n}\n\nMyProgress.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MyProgress);\n"]},"metadata":{},"sourceType":"module"}