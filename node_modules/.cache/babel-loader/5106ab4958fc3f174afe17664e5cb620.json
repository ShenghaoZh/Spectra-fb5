{"ast":null,"code":"var _jsxFileName = \"/Users/shenghaozhang/Documents/Programs/0-Spectra/HW5-React/react-ui/src/components/Charts/heatmap.js\";\nimport React, { Component } from 'react';\nimport MyTemplete from '../Template';\nimport { XYPlot, XAxis, YAxis, HeatmapSeries, Hint } from 'react-vis';\nimport CodeBlock from '../';\nimport ReactMarkdown from 'react-markdown';\n\nclass MyHeatmap extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: false\n    };\n  }\n\n  renderHeat() {\n    const value = this.state.value;\n    const data = [{\n      x: 1,\n      y: 0,\n      color: 10\n    }, {\n      x: 1,\n      y: 5,\n      color: 8\n    }, {\n      x: 1,\n      y: 10,\n      color: 6\n    }, {\n      x: 1,\n      y: 15,\n      color: 7\n    }, {\n      x: 1,\n      y: 20,\n      color: 3\n    }, {\n      x: 2,\n      y: 0,\n      color: 12\n    }, {\n      x: 2,\n      y: 5,\n      color: 2\n    }, {\n      x: 2,\n      y: 10,\n      color: 1\n    }, {\n      x: 2,\n      y: 15,\n      color: 5\n    }, {\n      x: 2,\n      y: 20,\n      color: 10\n    }, {\n      x: 3,\n      y: 0,\n      color: 9\n    }, {\n      x: 3,\n      y: 5,\n      color: 2\n    }, {\n      x: 3,\n      y: 10,\n      color: 6\n    }, {\n      x: 3,\n      y: 15,\n      color: 12\n    }, {\n      x: 3,\n      y: 20,\n      color: 12\n    }];\n    return React.createElement(\"div\", {\n      className: \"circular-display\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(XYPlot, {\n      width: 700,\n      height: 700,\n      margin: {\n        Bottom: 20,\n        top: 35\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(XAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(HeatmapSeries, {\n      colorRange: [\"red\", \"orange\"],\n      onValueMouseOver: v => this.setState({\n        value: v\n      }),\n      onSeriesMouseOut: v => this.setState({\n        value: false\n      }),\n      data: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), value !== false && React.createElement(Hint, {\n      value: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })));\n  }\n\n  render() {\n    let output = this.renderHeat();\n    let myName = \"Heatmap\";\n    let string = \"\\n    import {XYPlot, XAxis, YAxis, HeatmapSeries} from 'react-vis';\\n\\n    renderHeat()\\n    {\\n      const data = [\\n        {x: 1, y: 0, color: 10},\\n        {x: 1, y: 5, color: 8},\\n        {x: 2, y: 10, color: 1},\\n        {x: 2, y: 15, color: 5},\\n        {x: 3, y: 10, color: 6},\\n        {x: 3, y: 15, color: 12},\\n      ];\\n\\n      return (\\n        <div>\\n        <XYPlot width={300} height={300}>\\n        <XAxis />\\n        <YAxis />\\n        <HeatmapSeries\\n          colorRange={[\\\"blue\\\", \\\"green\\\"]}\\n          data={data}\\n        />\\n      </XYPlot>\\n        </div>\\n      );\\n    }\\n    \";\n    let code = React.createElement(ReactMarkdown, {\n      source: string,\n      renderers: {\n        code: CodeBlock\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(MyTemplete, {\n      content: output,\n      name: myName,\n      sampleUsage: code,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default MyHeatmap;","map":{"version":3,"sources":["/Users/shenghaozhang/Documents/Programs/0-Spectra/HW5-React/react-ui/src/components/Charts/heatmap.js"],"names":["React","Component","MyTemplete","XYPlot","XAxis","YAxis","HeatmapSeries","Hint","CodeBlock","ReactMarkdown","MyHeatmap","state","value","renderHeat","data","x","y","color","Bottom","top","v","setState","render","output","myName","string","code"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAwB,aAAxB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,KAAvB,EAA8BC,aAA9B,EAA6CC,IAA7C,QAAwD,WAAxD;AACA,OAAOC,SAAP,MAAsB,KAAtB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;AAEA,MAAMC,SAAN,SAAwBT,SAAxB,CACA;AAAA;AAAA;AAAA,SACEU,KADF,GACU;AACNC,MAAAA,KAAK,EAAE;AADD,KADV;AAAA;;AAIEC,EAAAA,UAAU,GACV;AAAA,UACSD,KADT,GACkB,KAAKD,KADvB,CACSC,KADT;AAEE,UAAME,IAAI,GAAG,CACX;AAACC,MAAAA,CAAC,EAAE,CAAJ;AAAOC,MAAAA,CAAC,EAAE,CAAV;AAAaC,MAAAA,KAAK,EAAE;AAApB,KADW,EAEX;AAACF,MAAAA,CAAC,EAAE,CAAJ;AAAOC,MAAAA,CAAC,EAAE,CAAV;AAAaC,MAAAA,KAAK,EAAE;AAApB,KAFW,EAGX;AAACF,MAAAA,CAAC,EAAE,CAAJ;AAAOC,MAAAA,CAAC,EAAE,EAAV;AAAcC,MAAAA,KAAK,EAAE;AAArB,KAHW,EAIX;AAACF,MAAAA,CAAC,EAAE,CAAJ;AAAOC,MAAAA,CAAC,EAAE,EAAV;AAAcC,MAAAA,KAAK,EAAE;AAArB,KAJW,EAKX;AAACF,MAAAA,CAAC,EAAE,CAAJ;AAAOC,MAAAA,CAAC,EAAE,EAAV;AAAcC,MAAAA,KAAK,EAAE;AAArB,KALW,EAMX;AAACF,MAAAA,CAAC,EAAE,CAAJ;AAAOC,MAAAA,CAAC,EAAE,CAAV;AAAaC,MAAAA,KAAK,EAAE;AAApB,KANW,EAOX;AAACF,MAAAA,CAAC,EAAE,CAAJ;AAAOC,MAAAA,CAAC,EAAE,CAAV;AAAaC,MAAAA,KAAK,EAAE;AAApB,KAPW,EAQX;AAACF,MAAAA,CAAC,EAAE,CAAJ;AAAOC,MAAAA,CAAC,EAAE,EAAV;AAAcC,MAAAA,KAAK,EAAE;AAArB,KARW,EASX;AAACF,MAAAA,CAAC,EAAE,CAAJ;AAAOC,MAAAA,CAAC,EAAE,EAAV;AAAcC,MAAAA,KAAK,EAAE;AAArB,KATW,EAUX;AAACF,MAAAA,CAAC,EAAE,CAAJ;AAAOC,MAAAA,CAAC,EAAE,EAAV;AAAcC,MAAAA,KAAK,EAAE;AAArB,KAVW,EAWX;AAACF,MAAAA,CAAC,EAAE,CAAJ;AAAOC,MAAAA,CAAC,EAAE,CAAV;AAAaC,MAAAA,KAAK,EAAE;AAApB,KAXW,EAYX;AAACF,MAAAA,CAAC,EAAE,CAAJ;AAAOC,MAAAA,CAAC,EAAE,CAAV;AAAaC,MAAAA,KAAK,EAAE;AAApB,KAZW,EAaX;AAACF,MAAAA,CAAC,EAAE,CAAJ;AAAOC,MAAAA,CAAC,EAAE,EAAV;AAAcC,MAAAA,KAAK,EAAE;AAArB,KAbW,EAcX;AAACF,MAAAA,CAAC,EAAE,CAAJ;AAAOC,MAAAA,CAAC,EAAE,EAAV;AAAcC,MAAAA,KAAK,EAAE;AAArB,KAdW,EAeX;AAACF,MAAAA,CAAC,EAAE,CAAJ;AAAOC,MAAAA,CAAC,EAAE,EAAV;AAAcC,MAAAA,KAAK,EAAE;AAArB,KAfW,CAAb;AAkBA,WACE;AAAK,MAAA,SAAS,EAAG,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,GAAf;AAAoB,MAAA,MAAM,EAAE,GAA5B;AAAiC,MAAA,MAAM,EAAE;AAACC,QAAAA,MAAM,EAAE,EAAT;AAAaC,QAAAA,GAAG,EAAE;AAAlB,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAGA,oBAAC,aAAD;AACE,MAAA,UAAU,EAAE,CAAC,KAAD,EAAQ,QAAR,CADd;AAEE,MAAA,gBAAgB,EAAEC,CAAC,IAAI,KAAKC,QAAL,CAAc;AAACT,QAAAA,KAAK,EAAEQ;AAAR,OAAd,CAFzB;AAGE,MAAA,gBAAgB,EAAEA,CAAC,IAAI,KAAKC,QAAL,CAAc;AAACT,QAAAA,KAAK,EAAE;AAAR,OAAd,CAHzB;AAIE,MAAA,IAAI,EAAEE,IAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,EASCF,KAAK,KAAK,KAAV,IAAmB,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEA,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATpB,CADA,CADF;AAeD;;AACDU,EAAAA,MAAM,GACN;AACE,QAAIC,MAAM,GAAG,KAAKV,UAAL,EAAb;AACA,QAAIW,MAAM,GAAG,SAAb;AACA,QAAIC,MAAM,mmBAAV;AA4BA,QAAIC,IAAI,GAAI,oBAAC,aAAD;AAAe,MAAA,MAAM,EAAED,MAAvB;AAA+B,MAAA,SAAS,EAAE;AAAEC,QAAAA,IAAI,EAAElB;AAAR,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAZ;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAIe,MAAvB;AAA+B,MAAA,IAAI,EAAIC,MAAvC;AAA+C,MAAA,WAAW,EAAIE,IAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADF;AAKD;;AA/EH;;AAkFA,eAAehB,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport MyTemplete  from '../Template';\nimport {XYPlot, XAxis, YAxis, HeatmapSeries, Hint} from 'react-vis';\nimport CodeBlock from '../';\nimport ReactMarkdown from 'react-markdown';\n\nclass MyHeatmap extends Component\n{\n  state = {\n    value: false\n  };\n  renderHeat()\n  {\n    const {value} = this.state;\n    const data = [\n      {x: 1, y: 0, color: 10},\n      {x: 1, y: 5, color: 8},\n      {x: 1, y: 10, color: 6},\n      {x: 1, y: 15, color: 7},\n      {x: 1, y: 20, color: 3},\n      {x: 2, y: 0, color: 12},\n      {x: 2, y: 5, color: 2},\n      {x: 2, y: 10, color: 1},\n      {x: 2, y: 15, color: 5},\n      {x: 2, y: 20, color: 10},\n      {x: 3, y: 0, color: 9},\n      {x: 3, y: 5, color: 2},\n      {x: 3, y: 10, color: 6},\n      {x: 3, y: 15, color: 12},\n      {x: 3, y: 20, color: 12}\n    ];\n\n    return (\n      <div className = \"circular-display\">\n      <XYPlot width={700} height={700} margin={{Bottom: 20, top: 35}}>\n      <XAxis />\n      <YAxis />\n      <HeatmapSeries\n        colorRange={[\"red\", \"orange\"]}\n        onValueMouseOver={v => this.setState({value: v})}\n        onSeriesMouseOut={v => this.setState({value: false})}\n        data={data}\n      />\n      {value !== false && <Hint value={value} />}\n    </XYPlot>\n      </div>\n    );\n  }\n  render()\n  {\n    let output = this.renderHeat();\n    let myName = \"Heatmap\";\n    let string = `\n    import {XYPlot, XAxis, YAxis, HeatmapSeries} from 'react-vis';\n\n    renderHeat()\n    {\n      const data = [\n        {x: 1, y: 0, color: 10},\n        {x: 1, y: 5, color: 8},\n        {x: 2, y: 10, color: 1},\n        {x: 2, y: 15, color: 5},\n        {x: 3, y: 10, color: 6},\n        {x: 3, y: 15, color: 12},\n      ];\n\n      return (\n        <div>\n        <XYPlot width={300} height={300}>\n        <XAxis />\n        <YAxis />\n        <HeatmapSeries\n          colorRange={[\"blue\", \"green\"]}\n          data={data}\n        />\n      </XYPlot>\n        </div>\n      );\n    }\n    `;\n    let code = (<ReactMarkdown source={string} renderers={{ code: CodeBlock }}/>);\n    return(\n      <div>\n      <MyTemplete content = {output} name = {myName} sampleUsage = {code}/>\n      </div>\n    );\n  }\n}\n\nexport default MyHeatmap;\n"]},"metadata":{},"sourceType":"module"}