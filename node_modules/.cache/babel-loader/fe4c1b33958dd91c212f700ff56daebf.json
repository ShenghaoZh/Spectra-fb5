{"ast":null,"code":"var _jsxFileName = \"/Users/shenghaozhang/Documents/Programs/0-Spectra/HW5-React/react-ui/src/components/Charts/scatterplot.js\";\nimport React, { Component } from 'react';\nimport MyTemplete from '../Template';\nimport { XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines, MarkSeries } from 'react-vis';\nimport CodeBlock from '../';\nimport ReactMarkdown from 'react-markdown';\n\nclass MyScatterplot extends Component {\n  renderScatterplot() {\n    const data = [{\n      x: 0,\n      y: 8,\n      size: 12\n    }, {\n      x: 1,\n      y: 5,\n      size: 10\n    }, {\n      x: 2,\n      y: 4,\n      size: 5\n    }, {\n      x: 2,\n      y: 1,\n      size: 10\n    }, {\n      x: 3,\n      y: 9,\n      size: 5\n    }, {\n      x: 4,\n      y: 1,\n      size: 10\n    }, {\n      x: 4,\n      y: 4,\n      size: 15\n    }, {\n      x: 5,\n      y: 7,\n      size: 10\n    }, {\n      x: 6,\n      y: 6,\n      size: 10\n    }, {\n      x: 7,\n      y: 3,\n      size: 5\n    }, {\n      x: 8,\n      y: 2,\n      size: 10\n    }, {\n      x: 8,\n      y: 6,\n      size: 5\n    }, {\n      x: 9,\n      y: 8,\n      size: 12\n    }, {\n      x: 10,\n      y: 0,\n      size: 5\n    }, {\n      x: 10,\n      y: 5,\n      size: 10\n    }, {\n      x: 3,\n      y: 3,\n      size: 5\n    }, {\n      x: 6,\n      y: 10,\n      size: 15\n    }, {\n      x: 0,\n      y: 2,\n      size: 5\n    }];\n    return React.createElement(\"div\", {\n      className: \"scatterplot-display\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(XYPlot, {\n      margin: {\n        Bottom: 20,\n        top: 30\n      },\n      height: 700,\n      width: 700,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(VerticalGridLines, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(HorizontalGridLines, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(MarkSeries, {\n      data: data,\n      sizeRange: [5, 15],\n      color: \"#404040\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })));\n  }\n\n  render() {\n    let output = this.renderScatterplot();\n    let myName = \"Scatterplot\";\n    let string = \"\\n    import {XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines, MarkSeries} from 'react-vis';\\n\\n    const data = [\\n      {x: 0, y: 8, size: 15},\\n      {x: 1, y: 5, size: 10},\\n      {x: 2, y: 4, size: 5},\\n      {x: 3, y: 9, size: 5},\\n      {x: 4, y: 1, size: 10},\\n      {x: 5, y: 7, size: 10},\\n      {x: 6, y: 6, size: 10},\\n      {x: 7, y: 3, size: 5},\\n    ];\\n    return (\\n      <div>\\n        <XYPlot height={500} width= {500}>\\n          <VerticalGridLines />\\n          <HorizontalGridLines />\\n          <XAxis />\\n          <YAxis />\\n          <MarkSeries data={data} sizeRange={[5, 15]}/>\\n        </XYPlot>\\n      </div>\\n    ); \";\n    let code = React.createElement(ReactMarkdown, {\n      source: string,\n      renderers: {\n        code: CodeBlock\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(MyTemplete, {\n      content: output,\n      name: myName,\n      sampleUsage: code,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default MyScatterplot;","map":{"version":3,"sources":["/Users/shenghaozhang/Documents/Programs/0-Spectra/HW5-React/react-ui/src/components/Charts/scatterplot.js"],"names":["React","Component","MyTemplete","XYPlot","XAxis","YAxis","HorizontalGridLines","VerticalGridLines","MarkSeries","CodeBlock","ReactMarkdown","MyScatterplot","renderScatterplot","data","x","y","size","Bottom","top","render","output","myName","string","code"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport MyTemplete  from '../Template';\nimport {XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines, MarkSeries} from 'react-vis';\nimport CodeBlock from '../';\nimport ReactMarkdown from 'react-markdown';\n\nclass MyScatterplot extends Component\n{\n\n  renderScatterplot()\n  {\n    const data = [\n      {x: 0, y: 8, size: 12},\n      {x: 1, y: 5, size: 10},\n      {x: 2, y: 4, size: 5},\n      {x: 2, y: 1, size: 10},\n      {x: 3, y: 9, size: 5},\n      {x: 4, y: 1, size: 10},\n      {x: 4, y: 4, size: 15},\n      {x: 5, y: 7, size: 10},\n      {x: 6, y: 6, size: 10},\n      {x: 7, y: 3, size: 5},\n      {x: 8, y: 2, size: 10},\n      {x: 8, y: 6, size: 5},\n      {x: 9, y: 8, size: 12},\n      {x: 10, y: 0, size: 5},\n      {x: 10, y: 5, size: 10},\n      {x: 3, y: 3, size: 5},\n      {x: 6, y: 10, size: 15},\n      {x: 0, y: 2, size: 5}\n    ];\n    return (\n      <div className = \"scatterplot-display\">\n        <XYPlot margin={{Bottom: 20, top: 30}} height={700} width= {700}>\n          <VerticalGridLines />\n          <HorizontalGridLines />\n          <XAxis />\n          <YAxis />\n          <MarkSeries data={data} sizeRange={[5, 15]} color=\"#404040\"/>\n        </XYPlot>\n      </div>\n    );\n  }\n  render()\n  {\n    let output = this.renderScatterplot();\n    let myName = \"Scatterplot\";\n    let string = `\n    import {XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines, MarkSeries} from 'react-vis';\n\n    const data = [\n      {x: 0, y: 8, size: 15},\n      {x: 1, y: 5, size: 10},\n      {x: 2, y: 4, size: 5},\n      {x: 3, y: 9, size: 5},\n      {x: 4, y: 1, size: 10},\n      {x: 5, y: 7, size: 10},\n      {x: 6, y: 6, size: 10},\n      {x: 7, y: 3, size: 5},\n    ];\n    return (\n      <div>\n        <XYPlot height={500} width= {500}>\n          <VerticalGridLines />\n          <HorizontalGridLines />\n          <XAxis />\n          <YAxis />\n          <MarkSeries data={data} sizeRange={[5, 15]}/>\n        </XYPlot>\n      </div>\n    ); `;\n    let code = (<ReactMarkdown source={string} renderers={{ code: CodeBlock }}/>);\n    return(\n      <div>\n      <MyTemplete content = {output} name = {myName} sampleUsage = {code}/>\n      </div>\n    );\n  }\n}\n\nexport default MyScatterplot;\n"]},"metadata":{},"sourceType":"module"}