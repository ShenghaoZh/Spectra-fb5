{"ast":null,"code":"var _jsxFileName = \"/Users/shenghaozhang/Documents/Programs/0-Spectra/HW5-React/react-ui/src/components/Charts/lineMark.js\";\nimport React, { Component } from 'react';\nimport MyTemplete from '../Template';\nimport { XYPlot, XAxis, YAxis, HorizontalGridLines, LineMarkSeries, VerticalGridLines } from 'react-vis';\nimport CodeBlock from '../';\nimport ReactMarkdown from 'react-markdown';\n\nclass MyLineMark extends Component {\n  renderLineMark() {\n    const data1 = [{\n      x: 0,\n      y: 4\n    }, {\n      x: 1,\n      y: 15\n    }, {\n      x: 2,\n      y: 7\n    }, {\n      x: 3,\n      y: 5\n    }, {\n      x: 4,\n      y: 3\n    }, {\n      x: 5,\n      y: 9\n    }, {\n      x: 6,\n      y: 18\n    }, {\n      x: 7,\n      y: 13\n    }, {\n      x: 8,\n      y: 10\n    }, {\n      x: 9,\n      y: 4\n    }, {\n      x: 10,\n      y: 0\n    }, {\n      x: 11,\n      y: 17\n    }, {\n      x: 12,\n      y: 22\n    }, {\n      x: 13,\n      y: 25\n    }, {\n      x: 14,\n      y: 20\n    }, {\n      x: 15,\n      y: 12\n    }];\n    const data2 = [{\n      x: 0,\n      y: 10\n    }, {\n      x: 1,\n      y: 11\n    }, {\n      x: 2,\n      y: 8\n    }, {\n      x: 3,\n      y: 9\n    }, {\n      x: 4,\n      y: 6\n    }, {\n      x: 5,\n      y: 18\n    }, {\n      x: 6,\n      y: 8\n    }, {\n      x: 7,\n      y: 20\n    }, {\n      x: 8,\n      y: 6\n    }, {\n      x: 9,\n      y: 0\n    }, {\n      x: 10,\n      y: 22\n    }, {\n      x: 11,\n      y: 11\n    }, {\n      x: 12,\n      y: 25\n    }, {\n      x: 13,\n      y: 16\n    }, {\n      x: 14,\n      y: 15\n    }, {\n      x: 15,\n      y: 14\n    }];\n    return React.createElement(\"div\", {\n      className: \"lineMark-display\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(XYPlot, {\n      margin: {\n        Bottom: 20,\n        top: 30\n      },\n      xDomain: [0, 16],\n      yDomain: [0, 26],\n      width: 700,\n      height: 700,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(VerticalGridLines, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(HorizontalGridLines, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(LineMarkSeries, {\n      className: \"linemark-series-example\",\n      style: {\n        strokeWidth: '3px'\n      },\n      lineStyle: {\n        stroke: '#404040'\n      },\n      markStyle: {\n        stroke: '#404040'\n      },\n      curve: 'curveMonotoneX',\n      data: data1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(LineMarkSeries, {\n      className: \"linemark-series-example-2\",\n      style: {\n        strokeWidth: '3px'\n      },\n      lineStyle: {\n        stroke: '#ababab'\n      },\n      markStyle: {\n        stroke: '#ababab'\n      },\n      curve: 'curveMonotoneX',\n      data: data2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })));\n  }\n\n  render() {\n    let output = this.renderLineMark();\n    let myName = \"LineMark\";\n    let string = \"\\n    import {XYPlot, XAxis, YAxis, HorizontalGridLines, LineMarkSeries, VerticalGridLines} from 'react-vis';\\n\\n    renderLineMark()\\n    {\\n      const data1 = [\\n        {x: 0, y: 4},\\n        {x: 1, y: 18},\\n        {x: 2, y: 2},\\n        {x: 3, y: 9},\\n      ];\\n      const data2 = [\\n        {x: 0, y: 10},\\n        {x: 1, y: 6},\\n        {x: 2, y: 2},\\n        {x: 3, y: 0},\\n      ];\\n      return (\\n        <div>\\n          <XYPlot width={300} height={300}>\\n          <VerticalGridLines />\\n          <HorizontalGridLines />\\n          <XAxis />\\n          <YAxis />\\n          <LineMarkSeries\\n            className=\\\"linemark-series-example\\\"\\n            data={data1}\\n          />\\n          <LineMarkSeries\\n            className=\\\"linemark-series-example-2\\\"\\n            data={data2}\\n          />\\n        </XYPlot>\\n      <div>\\n      );\";\n    let code = React.createElement(ReactMarkdown, {\n      source: string,\n      renderers: {\n        code: CodeBlock\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(MyTemplete, {\n      content: output,\n      name: myName,\n      sampleUsage: code,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default MyLineMark;","map":{"version":3,"sources":["/Users/shenghaozhang/Documents/Programs/0-Spectra/HW5-React/react-ui/src/components/Charts/lineMark.js"],"names":["React","Component","MyTemplete","XYPlot","XAxis","YAxis","HorizontalGridLines","LineMarkSeries","VerticalGridLines","CodeBlock","ReactMarkdown","MyLineMark","renderLineMark","data1","x","y","data2","Bottom","top","strokeWidth","stroke","render","output","myName","string","code"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport MyTemplete  from '../Template';\nimport {XYPlot, XAxis, YAxis, HorizontalGridLines, LineMarkSeries, VerticalGridLines} from 'react-vis';\nimport CodeBlock from '../';\nimport ReactMarkdown from 'react-markdown';\n\nclass MyLineMark extends Component\n{\n\n  renderLineMark()\n  {\n    const data1 = [\n      {x: 0, y: 4},\n      {x: 1, y: 15},\n      {x: 2, y: 7},\n      {x: 3, y: 5},\n      {x: 4, y: 3},\n      {x: 5, y: 9},\n      {x: 6, y: 18},\n      {x: 7, y: 13},\n      {x: 8, y: 10},\n      {x: 9, y: 4},\n      {x: 10, y: 0},\n      {x: 11, y: 17},\n      {x: 12, y: 22},\n      {x: 13, y: 25},\n      {x: 14, y: 20},\n      {x: 15, y: 12}\n    ];\n    const data2 = [\n      {x: 0, y: 10},\n      {x: 1, y: 11},\n      {x: 2, y: 8},\n      {x: 3, y: 9},\n      {x: 4, y: 6},\n      {x: 5, y: 18},\n      {x: 6, y: 8},\n      {x: 7, y: 20},\n      {x: 8, y: 6},\n      {x: 9, y: 0},\n      {x: 10, y: 22},\n      {x: 11, y: 11},\n      {x: 12, y: 25},\n      {x: 13, y: 16},\n      {x: 14, y: 15},\n      {x: 15, y: 14}\n    ];\n    return (\n      <div className = \"lineMark-display\">\n        <XYPlot margin={{Bottom: 20, top: 30}} xDomain={[0, 16]} yDomain={[0, 26]} width={700} height={700}>\n        <VerticalGridLines/>\n        <HorizontalGridLines/>\n        <XAxis />\n        <YAxis />\n        <LineMarkSeries\n          className=\"linemark-series-example\"\n          style={{\n            strokeWidth: '3px'\n          }}\n          lineStyle={{stroke: '#404040'}}\n          markStyle={{stroke: '#404040'}}\n          curve={'curveMonotoneX'}\n          data={data1}\n        />\n        <LineMarkSeries\n          className=\"linemark-series-example-2\"\n          style={{\n            strokeWidth: '3px'\n          }}\n          lineStyle={{stroke: '#ababab'}}\n          markStyle={{stroke: '#ababab'}}\n          curve={'curveMonotoneX'}\n          data={data2}\n        />\n      </XYPlot>\n    </div>\n    );\n  }\n  render()\n  {\n    let output = this.renderLineMark();\n    let myName = \"LineMark\";\n    let string = `\n    import {XYPlot, XAxis, YAxis, HorizontalGridLines, LineMarkSeries, VerticalGridLines} from 'react-vis';\n\n    renderLineMark()\n    {\n      const data1 = [\n        {x: 0, y: 4},\n        {x: 1, y: 18},\n        {x: 2, y: 2},\n        {x: 3, y: 9},\n      ];\n      const data2 = [\n        {x: 0, y: 10},\n        {x: 1, y: 6},\n        {x: 2, y: 2},\n        {x: 3, y: 0},\n      ];\n      return (\n        <div>\n          <XYPlot width={300} height={300}>\n          <VerticalGridLines />\n          <HorizontalGridLines />\n          <XAxis />\n          <YAxis />\n          <LineMarkSeries\n            className=\"linemark-series-example\"\n            data={data1}\n          />\n          <LineMarkSeries\n            className=\"linemark-series-example-2\"\n            data={data2}\n          />\n        </XYPlot>\n      <div>\n      );`;\n    let code = (<ReactMarkdown source={string} renderers={{ code: CodeBlock }}/>);\n    return(\n      <div>\n      <MyTemplete content = {output} name = {myName} sampleUsage = {code}/>\n      </div>\n    );\n  }\n}\n\nexport default MyLineMark;\n"]},"metadata":{},"sourceType":"module"}